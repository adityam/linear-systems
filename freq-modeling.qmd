---
title: Frequency domain modeling

engine: julia
execute:
  echo: false
  freeze: true
  cache: true
---

## Introduction

In this lecture, we will review frequency domain modeling of LTI systems. You have seen this material in Signals and Systems. The purpose of this review is to simply introduce the notation used in this course, in case it happens to be different from the notation used in Signals and Systems. You are strongly encouraged to review your notes on this topic.

```{julia}
#| output: false
# Install packages

# using Pkg; Pkg.activate(".")
# for pkg in ["IJulia", "Revise", "ControlSystems", "Plots", "LaTeXStrings", "DataFrames", "JSON"]
#    Pkg.add(pkg)
# end
# 
# # Installing Jupyter Cache
# Pkg.add("Conda")
# using Conda
# Conda.add("jupyter-cache")

using Revise

using ControlSystems, Plots, LaTeXStrings

current_theme = :bright
current_colors = theme_palette(current_theme)
theme(current_theme)
default(linewidth=2)

```

:::{.callout-note icon=false appearance="simple"}
## <i class="bi bi-journal-text text-primary"></i> A comment about notation
In Signals and Systems, we used $u(t)$ to denote the step function. In this course, we will use $u(t)$ to denote the control input. So, to avoid confusion, we will use $\IND(t)$ to denote the step function. _Note that the book uses $u(t)$, which can get confusing, in my opinion._
:::


## Unilateral Laplace Transforms

Recall that there are two types of Laplace transforms (LTs): bi-lateral or two-sided LTs and unilateral or one-sided LTs. In this course, we will work exclusively with unilateral LTs.

Also recall that for two-sided LTs, we need to worry about the ROC (region of convergence). For one-sided LTs, we never explicitly mention the ROC since it is always the right hand plane right to the rightmost pole. 

We will use the notation
$$f(t) \xleftrightarrow{\quad\mathcal L\quad} F(s)$$
to denote a LT-pair. We will also use
$$F(s) = \mathcal{L}\{ f(t)\}$$
or
$$f(t) = \mathcal L^{-1}\{F(s)\}$$
when we want to explicitly write the LT or the inverse LT of a signal.

---

The basic formula for a unilateral LT is
$$F(s) = \int_{0-}^{\infty} f(t)e^{-st} dt.$$
The inverse Laplace transform is given by
$$f(t) = \frac{1}{2\pi j} \int_{\sigma - j \infty}^{\sigma + j \infty} F(s) e^{st} ds$$
where $\sigma$ is chosen such that $(\sigma,0)$ is in the ROC. 

In this course, we will **never** explicitly use these formulas to compute LTs. We will **always** use LT tables. You do not need to memorize the LT table; one will be provided during the examples. What you do need is the understanding of how to use the LT tables to compute LTs of complicated expressions and to compute inverse LTs using partial fraction expansion.

I will not review this material in class. Please go back to your SS notes or review Sec 2.1--2.2 of the textbook. It is important to understand the following three cases:

1. Roots of the denominator are real and distinct
2. Roots of the denominator are complex and distinct
3. Roots of the denominator are real and repeated. 


## The Transfer Function

Consider an LTI system with input $u(t)$ (also called the reference signal sometimes) and output $y(t)$. We can also represent this as the following block diagram:

![An LTI System](figures/svg/interconnect1.svg){#fig-LTI}

All such systems can be represented by constant coefficient linear differential equations (LDE) of the form
$$
a_n \frac{d^n y(t)}{dt^n}  + a_{n-1} \frac{d^{n-1} y(t)}{dt^{n-1}} + \cdots  a_0 y(t)
= b_m \frac{d^m u(t)}{dt^m} + b_{m-1} \frac{d^{m-1} u(t)}{dt^{m-1}} + \cdots + b_0 u(t).
$$

- This differential equation is called **linear** because there are no non-linear or multiplicative terms of the form $\displaystyle \left(\frac{d^3 y(t)}{dt^3}\right)\left(\frac{d^2 y(t)}{dt^2}\right)$. 

- It is called **constant coefficient** because the coefficients $a_n$ and $b_m$ are constants that do not depend on time.

There is a one-to-one correspondence between constant coefficient LDE and an LTI system. That is, every LTI system can be described by a constant coefficient LDE and vice-versa. 

Recall that a key defining property of an LTI system is its impulse response, which we will typically denote by $g(t)$ and the transfer function, which we denote by $G(s)$. Recall that $g(t) \xleftrightarrow{\quad \mathcal L \quad} G(s)$. 

Now an interesting feature of a constant coefficient LDE is that we can identify the transfer function simply by inspection. 

![An LTI System](figures/svg/interconnect2.svg){#fig-LTI-s}

Given an LTI system with input $u(t)$ and output $y(t)$, we know that
$$Y(s) = G(s)U(s).$$
Therefore, if we know the input and output, we can identify the transfer function using
$$ G(s) = \frac{Y(s)}{U(s)}.$$
Now, if we go back to the general formula of a constant coefficient LDE 
$$
a_n \frac{d^n y(t)}{dt^n}  + a_{n-1} \frac{d^{n-1} y(t)}{dt^{n-1}} + \cdots  a_0 y(t)
= b_m \frac{d^m u(t)}{dt^m} + b_{m-1} \frac{d^{m-1} u(t)}{dt^{m-1}} + \cdots + b_0 u(t).
$$
and assume that the system starts from zero-initial state and take the LT of both sides, we get
$$
a_n s^n Y(s) + a_{n-1} s^{n-1} Y(s) + \cdots + a_0 Y(s)
=
b_m s^m U(s) + b_{m-1} s^{m-1} U(s) + \cdots + b_m U(s).
$$
Rearranging terms, we get
$$
(a_n s^n + a_{n-1} s^{n-1} + \cdots + a_0) Y(s)
=
(b_m s^m + b_{m-1}s^{m-1} + \cdots + b_0) U(s).
$$
Therefore,
$$
G(s) = \frac{Y(s)}{U(s)}
= \frac{b_m s^m + b_{m-1} s^{m-1} + \cdots + b_m}
{a_n s^n + a_{n-1} s^{n-1} + \cdots + a_0}.
$$
Thus, we can easily go back and forth between the DE and the transfer function.

:::{#exm-LDE-TF}
Find the transfer function corresponding to the following LDE
$$
\frac{d}{dt}y(t) + 2 y(t) = u(t)
$$
:::

::: {.callout-note collapse="true"}
#### Solution
From inspection, we have
$$G(s) = \frac{1}{s + 2}$$
:::

:::{#exm-LDE-TF}
Find a LDE that implements the following TF
$$
G(s) = \frac{2s+1}{s^2 + 2s + 3}.
$$
:::

::: {.callout-note collapse="true"}
#### Solution
From inspection, we have
$$
\frac{d^2y(t)}{dt} + 2\frac{d y(t)}{dt} + 3c(t) = 2\frac{d u(t)}{dt} + u(t).
$$
:::

In this course, we will assume that the system is specified either as a LDE or as a TF. The textbook provides detailed examples of how to derive either the LDE or the TF from a physical system such as an electric circuit or a spring-mass system. 

We present an alternative representation of the TF (pole-zero plot) in the next section. Later in the course we will also study other equivalent forms of representing the system such as state space equations and Bode plots.

A final remark. In all the systems that we consider in this course, we will assume that $m < n$. So, the denominator of the TF has a strictly higher degree than the numerator. Such transfer functions are called **proper**. It is possible to have causal systems where $m=n$ but we will not consider that in this course. As a consequence, when we consider state space representation in future lectures, we will get formulas which are simpler than more general formulas which you may find at other sources. 

## Poles and Zeros of a Transfer Function

The TF of an LTI system is always of the form:
$$
G(s) 
= \frac{b_m s^m + b_{m-1} s^{m-1} + \cdots + b_m}
{a_n s^n + a_{n-1} s^{n-1} + \cdots + a_0}.
$$

Both the numerator and the denominator are polynomials in $s$. So, we can factorize them and write the TF as 
$$
G(s) 
= K
\frac{(s-z_1)(s-z_2) \cdots (s - z_m)}
{(s-p_1)(s-p_2)\cdots (s-p_n)}.
$$

- The roots of the numerator are called **zeros** (because $G(z_i) = 0$). 
- The roots of the denominator are called **poles** (because $G(p_i) = \infty$ and if we plot $G(s)$ it will have a peak going to $∞$ at $p_i$; this peak looks like a pole). 
- The constant $K$ is called the **gain** (because, when none of the poles and zeros are at origin, the step response of $G(s)$ will have a steady state value of $K$). 

We often represent the poles and zeros using a **pole-zero plot.**

```{ojs}
PZplot = function(zeros, poles, xdomain, ydomain) {
  return Plot.plot({
    grid: true,
    x: { domain: xdomain},
    y: { domain: ydomain},

    marks: [
      // Axes
      Plot.ruleX([0]),
      Plot.ruleY([0]),
      // Data
      Plot.dot(zeros, {x:"σ", y:"jω", r: 5}),
      Plot.dot(poles, {x:"σ", y:"jω", symbol: "times", r: 5}),
    ]
  })
}
```

::: {#exm-pole-zero}
#### Pole-zero plot
Consder
$$G(s) = \frac{s+2}{(s+1)^2 + 1^2}.$$
The poles are $-1 \pm j$ and the zero is $-2$. The pole-zero plot is shown below, where the location of the pole is represented by a "cross" and the location of the zero is represented by a "circle". 

```{ojs}
PZplot(
       [ {σ: -2, jω: 0} ], 
       [ { σ: -1, jω: -1 }, {σ: -1, jω: 1 } ],
       [-3, 3],
       [-3, 3],
      )
```
:::

Since the polynomials in the numerator and denominator of $G(s)$ have real coefficients, the roots are either real or occur in complex conjugate pairs. So, the poles and zeros either lie on the $σ$-axis or are symmetric about the $σ$-axis. 

Note that the pole-zero plot does not capture the gain of the TF. 


## BIBO Stability

Recall from Signals and Systems that an LTI system with impulse response $g(t)$ is BIBO stable if
$$
\int_{-∞}^{∞} |g(t)| dt < \infty.
$$

For a causal system (i.e., a system for which $g(t) = 0$ for $t < 0$), this is equivalent to 
$$
\int_{0^{-}}^{∞} |g(t)| dt < ∞.
$$

This implies that for any $σ \in \reals$, $σ > 0$, we have 
$$
\int_{0^{-}}^{∞} |g(t)| e^{-σt} dt < ∞. 
$$

Therefore, there can be no pole in the open right hand plane $\{ (σ + j ω) : σ > 0 \}$. Thus, we have the following:

> A causal LTI system is stable if all poles are in the open left hand plane. 

```{ojs}
//| layout-ncol: 2 
//| fig-cap: Illustration of stable and unstable systems
//| fig-subcap:
//|     - Stable systems
//|     - Unstable systems
//|     - Marginally systems
//|     - Unstable systems (double pole at origin)

PZplot(
       [ {σ: 1.5, jω: 0} ], 
       [ { σ: -1, jω: -1 }, {σ: -1, jω: 1 }, {σ: -1.5, jω: 0} ],
       [-2, 2],
       [-2, 2],
      )

PZplot(
       [ {σ: -1.5, jω: 0} ], 
       [ { σ: -1, jω: -1 }, {σ: -1, jω: 1 }, { σ: 1.5, jω: 0 } ],
       [-2, 2],
       [-2, 2],
      )

PZplot(
       [ {σ: 1.5, jω: 0} ], 
       [ { σ: -1, jω: -1 }, {σ: -1, jω: 1 }, {σ: 0, jω: 0} ],
       [-2, 2],
       [-2, 2],
      )

PZplot(
       [ {σ: 1.5, jω: 0} ], 
       [ { σ: -1, jω: -1 }, {σ: -1, jω: 1 }, {σ: -0.02, jω: 0}, {σ: 0.02, jω: 0} ],
       [-2, 2],
       [-2, 2],
      )

```

If there are poles on the $j ω$ axis and the poles have multiplicity 1, then the system is **marginally stable**; if poles have multiplicity greater than 1, then the system is unstable.

In the next lecture, we will see how to use the poles to identify the step response of the system.

## Step Response

One of the configurations that we will really focus on in the course is the output of a _stable_ system when the **input is a step function.** This is often the case when we specify a reference input such as the desired temperature of a room or the desired speed in cruise control of a car, and are interested in seeing if we get a "good" output. Note that this question is only of interest for stable systems. If the system is unstable, then the output will go to infinity. 

As an example, consider the system of @exm-LDE-TF. What is the output when the input is a step function (assuming that the system starts from a zero initial state)?

To compute this, recall
$$
\IND(t) \xleftrightarrow{\quad \mathcal L\quad} \frac 1s.
$$

Thus, $U(s) = 1/s$. We had already identified that $G(s) = 1/(s+2)$. Thus,
\begin{align*}
Y(s) &= G(s) U(s) \\
     &= \frac{1}{s(s+2)} \\
     &= \frac{ \frac 12 }{s} - \frac{ \frac 12 }{ s + 2 }
     \quad \text{[By partial fraction expansion]}.
\end{align*}
Thus,
$$
  y(t) = \left[ \frac 12 - \frac 12 e^{-2t} \right] \IND(t).
$$

We can verify this by simulation.[^code]

```{julia}
#| echo: true
using ControlSystems, Plots

G = zpk([], [-2], 1)
T = 4

plot(step(G, T), label=L"G(s)", size=(500,250))
```

[^code]: In the lab, we will use Matlab for simulating LTI systems. However, in the course notes, I use Julia which makes it easier to directly include the output in a webpage. 

## Interconnection of LTI Systems

There are three common ways to inter connect LTI systems shown below.

![Cascade Connection equivalent to $G_1(s)G_2(s)$.](figures/svg/interconnect3.svg){#fig-cascade}

![Parallel Connection equivalent to $G_1(s) + G_2(s)$.](figures/svg/interconnect4.svg){#fig-parallel}

![Feedback Connection equivalent to $\displaystyle \frac{G(s)}{1 + G(s)H(s)}$.](figures/svg/interconnect5.svg){#fig-feedback}

## Time-delay systems

In a real system, there is often a delay between input and output, which is often modeled by a delay block whose output $y(t)$ is a delayed version of the input $u(t)$, by a delay time $τ$, that is
$$
  y(t) = u(t-τ).
$$
Taking the Laplace transform of both sides, we get
$$
Y(s) = e^{-τs}U(s).
$$
Therefore, the TF of time-delay unit is $e^{-τs}$, which is different from the TFs studied so far as it is not a rational polynomial of $s$. It is possible to approximate $e^{-τs}$ using a rational polynomial using what is called [**Padé approximation**](https://en.wikipedia.org/wiki/Pad%C3%A9_approximant):

- **First-order Padé approximation:**
  $$ e^{-τs} \approx \dfrac{1 - τs/2}{1 + τs/2}. $$

- **Second-order Padé approximation:**
  $$ e^{-τs} \approx \dfrac{1 - τs/2 + (τs)^2/12}{1 + τs/2 + (τs)^2/12}. $$

We will not study time-delay systems in the course. 
