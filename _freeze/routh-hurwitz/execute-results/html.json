{
  "hash": "b36cd9086ce02163fa5377c2014905c6",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: Routh-Hurwitz Stability Criterion\n\nengine: julia\nexecute:\n  echo: false\n  freeze: true\n  cache: true\n\n---\n\nConsider a unity feedback system as shown in @fig-feedback. In such a setting, we are often interested in finding the values of $K$ for which the system is stable. \n\n![Block diagram of a proportional controller](figures/svg/routh-hurwitz1.svg){#fig-feedback}\n\n\n\n:::{#exm-PI}\nConsider the system shown in @fig-feedback with\n$$ G(s) = \\frac{1}{s-1}. $$\nFind the values of $K$ for which the system is stable. \n:::\n\n:::{.callout-note collapse=\"false\"} \n#### Solution\n\nThe closed-loop transfer function is given by\n$$ T(s) = \\frac{K G(s)}{1 + K G(s) } = \\frac{K}{s - 1 + K}. $$\nThus, the closed-loop transfer function has a pole at $1 - K$. The system is stable when all poles are in the OLHP, i.e., $1 - K < 0$. Thus, the system is stable for \n$$ K > 1. $$\n:::\n\nIn the above example, we could identify the roots of the closed loop transfer function and thereby determine the values of gain $K$ for which the system is stable. However, we can only factorize lower order polynomials; for polynomials with degree greater than $5$, we need to resort to numerical methods. Doing so, makes it difficult to find the range of values of $K$ for which a polynomial is stable. \n\nHowever, for determine the stability of a system, we don't need to find the roots of the denominator polynomial; we simply need to verify that all the roots are in the OLHP. The following result shows that we can determine if roots lie in the ORHP without factorizing a polynomial. \n\n:::{#thm-factorize}\nA necessary condition for a polynomial to be stable is that all the coefficients have the same sign (positive or negative)\n:::\n\nBut this is a necessary condition but not a sufficient condition. So, we know that the polynomial\n$$ D(s) = s^5 + 4 s^4 + 10s^3 - s^2 + 2 s + 1$$\nis unstable because one of the coefficients are negative. Moreover, we know that the polynomial\n$$ D(s) = s^4 + 4s^3 + s + 1$$\nis unstable because the coefficient of the $s^2$ term is $0$. But this necessary condition doesn't tell us if \n$$ D(s) = s^5 + 4 s^4 + 10s^3 + s^2 + 2 s + 1$$ \nis stable or not.\n\nThe Routh-Hurwitz criterion is a simple algebraic procedure which determines whether a polynomial is stable. The first step is generating what is called a Routh Array. \n\n\n## Generating the Routh Array\n\nConsider a polynomial \n$$ D(s) = a_n s^n + \\cdots + a_0. $$\n\nThe Routh array is a (non-rectangular) array with $n+1$ rows, indexed by $s^n$, $s^{n-1}$, $\\dots$, $s^0$. \n\n- **Step 1.** Fill the first two rows of the Routh array with the coefficients of $D(s)$ going in the zigzag pattern as shown below. We stop when we have used all the coefficients. Any unfilled entries in the Routh array are assumed to be zero. \n\n    <table class=\"routharray-simple\" align=\"center\">\n    <tr>\n      <td>$s^n$</td>\n      <td>$a_{n}$</td>\n      <td>$a_{n-2}$</td>\n      <td>$\\cdots$</td>\n    </tr>\n    <tr>\n      <td>$s^{n-1}$</td>\n      <td>$a_{n-1}$</td>\n      <td>$a_{n-3}$</td>\n      <td>$\\cdots$</td>\n    </tr>\n    </table>\n\n- **Step 2.** This is a recursive step, where we take two filled rows, say row $s^{m+2}$ and $s^m$ and use that to fill row $s^m$, for all $m \\in \\{n-2, \\dots, 0\\}$. Each entry is the negative determinant of a $2 \\times 2$ matrix constructed from the entries in the previous two rows (i.e., row $s^{m+2}$ and $s^{m+1}$ when we are filling in row $s^m$) divided by the first entry in row $s^{m+1}$ (**provided that entry is not zero!**). The first column of $2 \\times 2$ matrix is the first column of the previous two rows; the second column of the $2 \\times 2$ matrix is the columns above and to the right. \n\n    <table class=\"routharray-simple\" align=\"center\">\n    <tr>\n      <td>$s^{m+2}$</td>\n      <td>$b_{1}$</td>\n      <td>$b_{2}$</td>\n      <td>$\\cdots$</td>\n    </tr>\n    <tr>\n      <td>$s^{m+1}$</td>\n      <td>$c_1$</td>\n      <td>$c_2$</td>\n      <td>$\\cdots$</td>\n    </tr>\n    <tr>\n      <td>$s^{m}$</td>\n      <td>$-\\dfrac{\\DET{b_1 & b_2 \\\\ c_1 & c_2}}{c_1}$</td>\n      <td>$-\\dfrac{\\DET{b_1 & b_3 \\\\ c_1 & c_3}}{c_1}$</td>\n      <td>$\\cdots$</td>\n    </tr>\n    </table>\n\n    Note that in each row, we eventually end up with zeros at which time we stop filling the row. We repeat this procedure until we have filled all rows until row $s^0$. \n\nWe always follow the above method to fill in the Routh array, irrespective of the size of the polynomial. We illustrate this via some examples. \n\n:::{#exm-Routh-Hurwitz-1}\nFind the Routh Array of \n$$ D(s) = s^4 + 2 s^3 + 3 s^2 + 4s + 5. $$\n:::\n\n:::{.callout-note collapse=\"false\"} \n### Solution\n\nWe follow the procedure described above. The first column of the table is highlight.\n\n::: {#4 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;3&#36;</td><td>&#36;5&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;2&#36;</td><td>&#36;4&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 3 \\\\ 2 &#38; 4&#125;&#125;&#123;2&#125; &#61; 1&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 5 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 5&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 4 \\\\ 1 &#38; 5&#125;&#125;&#123;1&#125; &#61; -6&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 5 \\\\ -6 &#38; 0&#125;&#125;&#123;-6&#125; &#61; 5&#36;</td></tr></table>\n```\n:::\n:::\n\n\n:::\n\n## Interpreting the Routh Array\n\nWe start with the basic case when **there is no zero in the first column** (as is the case in @exm-Routh-Hurwitz-1). In this case, we look at the first column and count the number of sign changes. For example, the signs of the entries in the first column of @exm-Routh-Hurwitz-1 are shown below, from which we can see that there are two sign changes in the first column (going from row $s^2$ to row $s^1$ and going from row $s^1$ to row $s^0$).\n\n::: {#6 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWhen there are no zeros in the first column, it implies that the polynomial has no roots on the $j Ï‰$-axis. Moreover, \n\n- No. of roots in the ORHP = no. of sign changes\n- No. of roots in the OLHP = degree of polynomial $-$ no. of sign changes.\n\nSo, for @exm-Routh-Hurwitz-1, we have \n\n- No. of roots in the ORHP = 2 (no. of sign changes)\n- No. of roots in the OLPH = 4 (degree of polynomial) $-$ 2 (no. of sign changes) = 2. \n\nWe can verify this by factorizing $D(s)$, which gives\n\n::: {#8 .cell execution_count=1}\n``` {.julia .cell-code}\nD = Polynomial([5,4,3,2,1], :s)\nprintln(\"D(s) = \", D)\nroots(D)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 5 + 4*s + 3*s^2 + 2*s^3 + s^4\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n4-element Vector{ComplexF64}:\n -1.2878154795576484 - 0.8578967583284913im\n -1.2878154795576484 + 0.8578967583284913im\n  0.2878154795576478 - 1.416093080171908im\n  0.2878154795576478 + 1.416093080171908im\n```\n:::\n:::\n\n\n\n:::{#exm-Routh-Hurwitz-2}\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^4 + 5 s^3 + s^2 + 10s + 1. $$\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nWe first compute the Routh Array\n\n::: {#10 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;1&#36;</td><td>&#36;1&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;5&#36;</td><td>&#36;10&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 5 &#38; 10&#125;&#125;&#123;5&#125; &#61; -1&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 5 &#38; 0&#125;&#125;&#123;5&#125; &#61; 1&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 5 &#38; 10 \\\\ -1 &#38; 1&#125;&#125;&#123;-1&#125; &#61; 15&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; -1 &#38; 1 \\\\ 15 &#38; 0&#125;&#125;&#123;15&#125; &#61; 1&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#12 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\n\nNote that there are two sign changes in the first column. Thus, we have\n\n- No. of roots in ORHP = 2 (no. of sign changes)\n- No. of roots in OLHP = 4 (degree of poly) $-$ 2 (no. of sign changes) = 2. \n\nWe can verify this by factorizing $D(s)$, which gives\n\n::: {#14 .cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 1 + 10*s + s^2 + 5*s^3 + s^4\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n4-element Vector{ComplexF64}:\n   -5.173143012444715 + 0.0im\n -0.10051275725870919 + 0.0im\n  0.13682788485171066 - 1.3800281123446885im\n  0.13682788485171066 + 1.3800281123446885im\n```\n:::\n:::\n\n\n\n:::\n\n### An optimization\n\nSince we only care about the signs of the coefficient, we can multiply or divide all elements in a row by a positive number without changing the result. This can sometimes lead to simpler calculations. \n\n:::{#exm-Routh-Hurwitz-3}\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^6 + 4s^5 + 3s^4 + 2s^3 + s^2 + 4s + 4. $$\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nWe first compute the Routh Array\n\n::: {#16 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;6&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;3&#36;</td><td>&#36;1&#36;</td><td>&#36;4&#36;</td></tr><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;\\cancel&#123;4&#125; 2&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td><td>&#36;\\cancel&#123;4&#125; 2&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 3 \\\\ 2 &#38; 1&#125;&#125;&#123;2&#125; &#61; \\frac&#123;5&#125;&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 2 &#38; 2&#125;&#125;&#123;2&#125; &#61; 0&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 4 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 4&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 1 \\\\ \\frac&#123;5&#125;&#123;2&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;5&#125;&#123;2&#125;&#125; &#61; 1&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 2 \\\\ \\frac&#123;5&#125;&#123;2&#125; &#38; 4&#125;&#125;&#123;\\frac&#123;5&#125;&#123;2&#125;&#125; &#61; \\frac&#123;-6&#125;&#123;5&#125;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; \\frac&#123;5&#125;&#123;2&#125; &#38; 0 \\\\ 1 &#38; \\frac&#123;-6&#125;&#123;5&#125;&#125;&#125;&#123;1&#125; &#61; 3&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; \\frac&#123;5&#125;&#123;2&#125; &#38; 4 \\\\ 1 &#38; 0&#125;&#125;&#123;1&#125; &#61; 4&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; \\frac&#123;-6&#125;&#123;5&#125; \\\\ 3 &#38; 4&#125;&#125;&#123;3&#125; &#61; \\frac&#123;-38&#125;&#123;15&#125;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 3 &#38; 4 \\\\ \\frac&#123;-38&#125;&#123;15&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;-38&#125;&#123;15&#125;&#125; &#61; 4&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#18 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;6&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nNote that there are two sign changes in the first column. Thus, we have\n\n- No. of roots in ORHP = 2 (no. of sign changes)\n- No. of roots in OLHP = 6 (degree of poly) $-$ 2 (no. of sign changes) = 4. \n\nWe can verify this by factorizing $D(s)$, which gives\n\n::: {#20 .cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 4 + 4*s + s^2 + 2*s^3 + 3*s^4 + 4*s^5 + s^6\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n6-element Vector{ComplexF64}:\n -3.2643574436966434 + 0.0im\n -0.8858022358397655 + 0.0im\n -0.6045963281166988 - 0.993535028893593im\n -0.6045963281166988 + 0.993535028893593im\n  0.6796761678849015 - 0.7488138087285154im\n  0.6796761678849015 + 0.7488138087285154im\n```\n:::\n:::\n\n\n:::\n\n\n## Why does it work?\n\nAll this appears to be magic! To get some intuition behind on why Routh-Hurwitz argument works, let's look at some special case. \n\n- **Degree 1 polynomials**\n\n    Consider $D(s) = a_1 s + a_0$. The Routh array is given by\n\n    <table class=\"routharray-simple\" align=\"center\">\n    <tr>\n      <td>$s^1$</td>\n      <td>$a_{1}$</td>\n    </tr>\n    <tr>\n      <td>$s^{0}$</td>\n      <td>$a_{0}$</td>\n    </tr>\n    </table>\n\n    The Routh-Hurwitz criteria states that if $a_0$ and $a_1$ are non-zero and have the same signs, then all roots of $D(s)$ are in the OLHP. It is easy to verify that this is true as the root of $D(s)$ is $-a_0/a_1$.\n\n- **Degree 2 polynomials**\n\n    Consider $D(s) = a_2 s^2 + a_1 s + a_0$. The Routh array is given by\n\n    <table class=\"routharray-simple\" align=\"center\">\n    <tr>\n      <td>$s^2$</td>\n      <td>$a_{2}$</td>\n      <td>$a_{0}$\n    </tr>\n    <tr>\n      <td>$s^1$</td>\n      <td>$a_{1}$</td>\n    </tr>\n    <tr>\n      <td>$s^{0}$</td>\n      <td>$a_{0}$</td>\n    </tr>\n    </table>\n\n    The Routh-Hurwitz criteria states that if $a_0$, $a_1$, and $a_2$ are non-zero and have the same signs, then all roots of $D(s)$ are in the OLHP. It is easy to verify that this is true as the roots of $D(s)$ are given by\n    $$\n        \\frac{-a_1 \\pm \\sqrt{a_1^2 - 4 a_0 a_2}}{2a_0}\n    $$\n    which either are complex valued with negative real part, or are negative real valued. \n\nBut the above line of argument is going to be difficult to generalize because we don't have closed form formulas for the roots of polynomials. So, let's look at the degree 2 polynomial differently. Define\n$$\n  P_2(s) = a_2 s^2 + a_0,\n  \\quad\n  P_1(s) = a_1 s,\n  \\quad\\text{and}\\quad\n  P_0(s) = a_0\n$$\nto be the polynomials corresponding to each row of the Routh array.\n\nSimple algebra shows that\n$$\n  P_2(s) = \\frac{a_2 s}{a_1} P_1(s) + P_0(s),\n$$\nthat is, the $P_0(s)$ polynomial is the remainder when $P_2(s)$ is divided by $P_1(s)$. \n\nFor ease of notation, let $q_2(s)$ denote $a_2 s/a_1$ and define $Q_2(s) = P_2(s) + P_1(s)$ and $Q_1(s) = P_1(s) + P_0(s)$. \nThe **key property** that implies the Routh-Hurwitz criteria is that the polynomials $Q_2(s)$ and $(1 + q_2(s))Q_1(s)$ have the same number of roots in the OLHP and ORHP. Moreover, they have identical roots on the $jÏ‰$-axis.\n\nFor the quadratic case, the key property is easy to verify via the formula for the roots. For the general case, see [this paper](https://doi.org/10.1109/MCS.2019.2949974) for two proofs of the key property based on continuity properties of polynomials and [Nyquist stability criterion](nyquist-stability.qmd).\n\n\n## Special cases: Zero in the first column\n\nWe cannot follow the usual method to construct the Routh array if there is zero in the first column. For example, consider\n$$ D(s) = s^5 + 2s^4 + 3s^3 + 6s^2 + 5s + 3. $$\n\n<table class=\"routharray\" align=\"center\">\n<tr>\n  <td>$s^5$</td>\n  <td>$1$</td>\n  <td>$3$</td>\n  <td>$5$</td>\n</tr>\n<tr>\n  <td>$s^4$</td>\n  <td>$2$</td>\n  <td>$6$</td>\n  <td>$3$</td>\n</tr>\n<tr>\n  <td>$s^3$</td>\n  <td>$0$</td>\n  <td>$7/2$</td>\n  <td>$3$</td>\n</tr>\n</table>\n\n\nIf there is zero in the first column but the entire row is not zero,\nwe proceed as follows\n\n- Replace the zero in the first column by an $Îµ$ and continue to construct the Routh array as a function of $Îµ$. \n- **Either** count the number of sign changes as $Îµ \\to 0^{+}$ ($Îµ$ goes to zero from above). Let this number be $k_{+}$. \n- **Or** count the number of sign changes as $Îµ \\to 0^{-}$ ($Îµ$ goes to zero from below). Let this number be $k_{-}$. \n\nIn all cases (see below for clarity), $k_{+} = k_{-}$. Therefore, we have\n\n- No. of roots in the ORHP = $k_{+} = k_{-}$\n- No. of roots on the $j Ï‰$-axis = 0. \n- No. of roots in the OLHP = $\\text{degree of polynomial} - k_{+}$ = $\\text{degree of polynomial} - k_{-}$. \n\nSince both $Îµ \\to 0^{+}$ and $Îµ \\to 0^{-}$ behave identically, **in practice, we only consider the limit $Îµ \\to 0^{+}$.** See below for why some textbooks recommend taking both limits.\n\n:::{#exm-Routh-Hurwitz-zero-1}\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^5 + 2s^4 + 3s^3 + 6s^2 + 5s + 3. $$\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nWe first compute the Routh Array\n\n::: {#22 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;3&#36;</td><td>&#36;5&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;2&#36;</td><td>&#36;6&#36;</td><td>&#36;3&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 3 \\\\ 2 &#38; 6&#125;&#125;&#123;2&#125; &#61; \\cancel&#123;0&#125; \\epsilon&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 5 \\\\ 2 &#38; 3&#125;&#125;&#123;2&#125; &#61; \\frac&#123;7&#125;&#123;2&#125;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 6 \\\\ \\epsilon &#38; \\frac&#123;7&#125;&#123;2&#125;&#125;&#125;&#123;\\epsilon&#125; &#61; \\frac&#123;-7 &#43; 6 \\epsilon&#125;&#123;\\epsilon&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 3 \\\\ \\epsilon &#38; 0&#125;&#125;&#123;\\epsilon&#125; &#61; 3&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; \\epsilon &#38; \\frac&#123;7&#125;&#123;2&#125; \\\\ \\frac&#123;-7 &#43; 6 \\epsilon&#125;&#123;\\epsilon&#125; &#38; 3&#125;&#125;&#123;\\frac&#123;-7 &#43; 6 \\epsilon&#125;&#123;\\epsilon&#125;&#125; &#61; \\frac&#123;\\frac&#123;-49&#125;&#123;2&#125; &#43; 21 \\epsilon - 3 \\epsilon^&#123;2&#125;&#125;&#123;-7 &#43; 6 \\epsilon&#125;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; \\frac&#123;-7 &#43; 6 \\epsilon&#125;&#123;\\epsilon&#125; &#38; 3 \\\\ \\frac&#123;\\frac&#123;-49&#125;&#123;2&#125; &#43; 21 \\epsilon - 3 \\epsilon^&#123;2&#125;&#125;&#123;-7 &#43; 6 \\epsilon&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;\\frac&#123;-49&#125;&#123;2&#125; &#43; 21 \\epsilon - 3 \\epsilon^&#123;2&#125;&#125;&#123;-7 &#43; 6 \\epsilon&#125;&#125; &#61; 3&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#24 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>&#36; Îµ \\to 0^&#123;&#43;&#125;&#36;</td><td>&#36; Îµ \\to 0^&#123;-&#125;&#36;</td></thead><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;-&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nIn both cases, we have two sign changes in the first column. Therefore, $k_{+} = k_{-} = 2$. Hence, we have\n\n- No. of roots in the ORHP = 2\n- No. of roots on the $j Ï‰$-axis = 0\n- No. of roots in the OLHP = $5 - 2 = 3$\n\n\nWe can verify this by factorizing $D(s)$, which gives\n\n::: {#26 .cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 3 + 5*s + 6*s^2 + 3*s^3 + 2*s^4 + s^5\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n5-element Vector{ComplexF64}:\n -1.6680888389741944 + 0.0im\n -0.5088331416337463 - 0.7019951317695377im\n -0.5088331416337463 + 0.7019951317695377im\n 0.34287756112084433 - 1.5082901611666297im\n 0.34287756112084433 + 1.5082901611666297im\n```\n:::\n:::\n\n\n:::\n\n:::{.callout-tip}\n#### Why do we replace zero with epsilon?\n\nWhen we get a zero in the first column (but the rest of the row is not zero), we cannot proceed with the construction of the Routh array. The intuition behind replacing the zero with epsilon is as follows.\n\n- Roots of a polynomial are a continuous function of the coefficients. So, if we make an infinitesimally small change in the coefficients, the roots will move by an infinitesimally small amount (and therefore not change location from OLHP to ORHP or vice-versa).\n\n- An infinitesimally small perturbation of the coefficients will change the entries of the Routh array by an infinitesimally small amount. This will change the zero in the first column to an infinitesimally small positive or negative value. \n\n- We can think of replacing zero by epsilon as the result of such an infinitesimally small perturbation.\n:::\n\n:::{.callout-warning}\n#### Why do textbooks do it differently?\n\nMost textbooks explain the procedure as follows. Compute $k_{+}$ and $k_{-}$ as above. Then, we have\n\n- No. of roots in the ORHP = $\\min\\{k_{+}, k_{-}\\}$\n- No. of roots on the $j Ï‰$-axis = $|k_{+} - k_{-}|$. \n- No. of roots in the OLHP = $\\text{degree of polynomial} - \\max\\{k_{+}, k_{-}\\}$. \n\nA typical example for using such a procedure is the following:\n\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^3 + 2s^2 + s^1 + 2. $$\n\nWe first compute the Routh Array\n\n::: {#28 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;1&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 1 &#38; 1&#125;&#125;&#123;1&#125; &#61; \\cancel&#123;0&#125; \\epsilon&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ \\epsilon &#38; 0&#125;&#125;&#123;\\epsilon&#125; &#61; 1&#36;</td></tr></table>\n```\n:::\n:::\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#30 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>&#36; Îµ \\to 0^&#123;&#43;&#125;&#36;</td><td>&#36; Îµ \\to 0^&#123;-&#125;&#36;</td></thead><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\nThere are no sign changes when $Îµ \\to 0^{+}$. Thus, $k_{+} = 0$. But, there are two sign changes when $Îµ \\to 0^{-}$. Thus, $k_{-} = 2$. Thus, we have\n\n- No. of roots in the ORHP = $\\min\\{k_{+}, k_{-}\\} = 0$.\n- No. of roots on the $j Ï‰$-axis = $|k_{+} - k_{-}| = 2$. \n- No. of roots in the OLHP = $\\text{degree of polynomial} - \\max\\{k_{+}, k_{-}\\} = 1$. \n\nWe can verify this by factorizing $D(s)$, which gives\n$$\n  s^3 + 2s^2 + s^2 + 2 = (s+2)(s^2 + 1)\n$$\nThus, there is indeed one root in the OLHP and two roots on the $j Ï‰$ axis.\n\n#### So, why don't I follow this procedure? {-}\n\nIn the above example, we have roots on the $j Ï‰$ axis. So, when we perturb the coefficients slightly, the roots may go either to the OLHP or the ORHP, depending on the sign of the perturbation.\n\nPersonally, I don't think that we need to use such an elaborate procedure to capture this case. The roots on the $j Ï‰$-axis always come in complex conjugate pairs. So, when we have roots on the $j Ï‰$ axis, a polynomial of the form $(s^2 + Ï‰^2)$ factorizes $D(s)$. \n\nSince an even polynomial divides $D(s)$, there will be **a row of zero** in the Routh array (we explain that below). In fact, since this even polynomial is of degree two, we know that it is the $s^1$ row that will be zero. \n\nThe main question is: **when the $s^1$ row is zero, should we treat is as a row with zero in the first column (but the entire row not being zero) or a row with all zeros?** \n\nMany textbooks treat it as a zero in the first column because the method to deal with it is simpler. But, it complicates how the general procedure for dealing with zero in the first column (separately take limits as $Îµ \\to 0^{+}$ and $Îµ \\to 0^{-}$. \n\nMy opinion is that we should treat zero in the first column of the $s^1$ row as a row of all zeros (because mathematically that is what it is). So, we will need to follow the more elaborate method of dealing with the row of zero. To me, this is the proper way to do it.\n\nOnce you have read how to deal with a row of zeros, we can resolve the above example _correctly_ as follows:\n\n::: {#32 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;1&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 1 &#38; 1&#125;&#125;&#123;1&#125; &#61; \\cancel&#123;0&#125; 2&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 1 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 1&#36;</td></tr></table>\n```\n:::\n:::\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#34 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\nSince we have a row of zeros, we split our analysis into two cases. The remainder polynomial, which is rows $s^3$ to $s^2$ and has no sign change, and the divisor polynomial, which is rows $s^2$ to $s^0$ and has no sign changes either. So, we have\n\n| Polynomial | degree | no. of sign changes | ORHP | OLHP | $j Ï‰$-axis |\n|:----------:|:------:|:-------------------:|:----:|:----:|:-----------|\n| Remainder  | 1 | 0 | 0 | 1 | 0 | \n| Divisor    | 2 | 0 | 0 | 0 | 2 |\n| $D(s)$     | 3 |   | 0 | 1 | 2 |\n\n: {.striped}\n\n\n### Another corner case {-}\n\nThere is another corner case that we must be aware of. **A row of zero in the last row!** Consider\n$$\n  D(s) = s^4 + 2s^3 + 3s^2 + 4s\n$$\n\n::: {#36 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;3&#36;</td><td>&#36;0&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td><td>&#36;\\cancel&#123;4&#125; 2&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 3 \\\\ 1 &#38; 2&#125;&#125;&#123;1&#125; &#61; 1&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 0 \\\\ 1 &#38; 0&#125;&#125;&#123;1&#125; &#61; 0&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 2 \\\\ 1 &#38; 0&#125;&#125;&#123;1&#125; &#61; 2&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 0 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 0&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nHowever, this only happens when $s$ divides $D(s)$, which is trivial to check. So, if we are dealing with a polynomial $D(s)$ shown above, we factorize it as\n$$\n  D(s) = s(s^3 + 2s^2 + 3s + 4).\n$$\nTherefore, we know that there is one root on the $j Ï‰$-axis. For the remaining roots we  use Routh-Hurwitz to analyze $(s^3 + 2s^2 + 3s + 4)$. \n\nThus, we always assume that $s=0$ is not a divisor of $D(s)$. \n:::\n\n### Reciprocal polynomial\n\nIf we get a zero in the first column, we can follow another method but this method is not guaranteed to work. To understand this, we need the notion of a **reciprocal polynomial**: for a polynomial $D(s)$ of degree $n$, the reciprocal polynomial is $s^n D(\\frac 1s)$. For instance, for @exm-Routh-Hurwitz-zero-1, we have\n\n\\begin{align*}\ns^5 D\\left(\\frac 1s\\right) &=\ns^5 \\left[ \\frac{1}{s^5} + \\frac{2}{s^4} + \\frac{3}{s^3} + \\frac{6}{s^2} + \\frac{5}{s} + 3 \\right] \\\\\n&= 3 s^5 + 5 s^4 + 6 s^3 + 3 s^2 + 2s + 1\n\\end{align*}\n\n:::{.callout-important}\n### Why look at the reciprocal polynomial.\nObserve that if $D(s)$ factorizes as\n$$\nD(s) = (s+p_1)(s+p_2) \\cdots (s+p_n)\n$$\nthen the factorization of $s^nD(\\frac 1s)$ is given by\n\\begin{align*}\ns^n D(s) &= s^n \\left( \\frac 1s + p_1 \\right) \\left( \\frac 1s + p_2 \\right) \\cdots \\left( \\frac 1s + p_n \\right) \\\\\n&= (p_1 p_2 \\cdots p_n) \\left(s + \\frac 1{p_1} \\right) \\left( s + \\frac{1}{p_2}\\right) \\cdots \\left(s + \\frac{1}{p_n} \\right).\n\\end{align*}\nThus, if $p_i$ is a root of $D(s)$, then $\\dfrac{1}{p_i}$ is a root of $s^n D(\\frac 1s)$. \n\nThe key point is that **$p_i$ and $1/p_i$ have the same sign**. In particular if \n$$\np_i = a_i + j b_i \\implies \\frac {1}{p_i} = \\frac{a}{|p_i|} - j\\frac{ b_i}{|p_i|}\n$$\nSo, the polynomial and its reciprocal have same number of roots in the OLHP, ORHP, and $j Ï‰$-axis.\n:::\n\n:::{#exm-Routh-Hurwitz-zero-2}\nSolve @exm-Routh-Hurwitz-zero-1 using the reciprocal polynomial.\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nWe have already computed the reciprocal polynomial above. We now construct the Routh array\n\n::: {#38 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;0&#36;</td><td>&#36;3&#36;</td><td>&#36;1&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;\\cancel&#123;4&#125; 2&#36;</td><td>&#36;\\cancel&#123;2&#125; 1&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 0 &#38; 3 \\\\ 2 &#38; 1&#125;&#125;&#123;2&#125; &#61; 3&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 0 &#38; 1 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 1&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 1 \\\\ 3 &#38; 1&#125;&#125;&#123;3&#125; &#61; \\frac&#123;1&#125;&#123;3&#125;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 3 &#38; 1 \\\\ \\frac&#123;1&#125;&#123;3&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;1&#125;&#123;3&#125;&#125; &#61; 1&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#40 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;-&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nThus, we see that there are two sign changes in the first column. Therefore, \n\n- No. of roots in the ORHP = 2 (no. of sign changes)\n- No. of roots in the OLHP = 5 (degree of polynomial) $-$ 2 (no. of sign changes) = 3.\nwhich matches with what we had observed in the solution of @exm-Routh-Hurwitz-zero-1.\n:::\n\n## Special cases: Entire row of zeros\n\nSometimes, we get an entire row of zero. For instance, consider\n$$\nD(s) = s^5 + 7s^4 + 6 s^3 + 42 s^2 + 8 s + 56. \n$$\n\nIn this case, the Routh array ends with a row of zero.\n\n<table class=\"routharray-simple\" align=\"center\">\n<tr>\n  <td>$s^5$</td>\n  <td>$1$</td>\n  <td>$6$</td>\n  <td>$8$</td>\n</tr>\n<tr>\n  <td>$s^4$</td>\n  <td>$\\cancel{7} 1$</td>\n  <td>$\\cancel{42} 6$</td>\n  <td>$\\cancel{56} 8$</td>\n</tr>\n<tr>\n  <td>$s^3$</td>\n  <td>$0$</td>\n  <td>$0$</td>\n  <td>$0$</td>\n</tr>\n</table>\n\n:::{.callout-important}\n### When do we get a row of zeros\n\nSuppose the row $s^{m-1}$ is zero in the Routh array. This means that the polynomial $P^m$ (which is the polynomial above the row of zeros) divides $D(s)$. \n\nFor instance, in the above example, row $s^3$ is zero. The above claim means that \n$$\nP_4(s) = s^4 + 6 s^2 + 8\n$$\ndivides $D(s)$. This is indeed the case and we can verify that\n$$\nD(s) = \\underbrace{(s+7)}_{\\text{remainder poly.}}\n       \\underbrace{(s^4 + 6s^2 + 8)}_{\\text{divisor poly.}}.\n$$\n\n:::\n\nThe rows that we have encountered until the row of all zeros corresponds to the remainder polynomial. We interpret is the same way we did the normal case. \n\nObserve that the divisor polynomial is an **even** polynomial.  A key feature of an even polynomial is that it has **an equal number of roots in the OLHP and the ORHP**. The number of sign changes is equal to the number of roots in the ORHP. So, the number of roots in OLHP are the same. The remaining roots must be on the $j Ï‰$-axis. \n\n:::{.callout-tip}\n### Roots of even polynomial\n\nAn even polynomial has the same number of roots in the ORHP and OLHP. \n\nConsider an even polynomial\n\n$$P^{2m}(s) = a_{2m} s^{2m} + a_{2m -2 } s^{2m -2} + \\cdots + a^0.$$\n\nWe can write this as a polynomial in $z = s^2$ as\n\n$$ a_{2m} z^m + a_{2m -2} z^{m-1} + \\cdots + a_0. $$\n\nLet $p_1, p_2, \\dots, p_m$ be the roots of this polynomial. Then, the roots of $P^{2m}$ are $\\pm \\sqrt{p_1}, \\pm \\sqrt{p_2}, \\dots, \\pm \\sqrt{p_m}$. \n\nNow observe the following:\n\nA. If $p_i$ is real and positive, then $+ \\sqrt{p_i}$ is positive and $- \\sqrt{p_i}$ is negative. Thus, one root is in the ORHP and one is in the OLHP.\n\nB. If $p_i$ is real and negative, then $\\pm \\sqrt{p_i} = \\pm j \\sqrt{|p_i|}$, which lie on the $j Ï‰$-axis. Thus, there are no roots in the ORHP or OLHP.\n\nC. If $p_i$ is complex and say equal to $a_i + j b_i$, then there must be another root $a_i - j b_i$. Now let $\\pm (c_i + j d_i)$ denote the square root of $a_i + j b_i$. Then, the square roots of $a_i - j b_i$ are $\\pm (c_i - j d_i)$. Thus, out of the four roots, two are in the the ORHP and two are in the OLHP.  \n\nThus, in all cases, no. of roots in the ORHP = no. of roots in the OLHP.\n\n<!-- TODO: Add a figure -->\n:::\n\nThe rows that we have encountered until the row of all zeros corresponds to the remainder polynomial. We interpret is the same way we did the normal case. \n\nWe first compute the Routh Array\n\n::: {#42 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;6&#36;</td><td>&#36;8&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;\\cancel&#123;7&#125; 1&#36;</td><td>&#36;\\cancel&#123;42&#125; 6&#36;</td><td>&#36;\\cancel&#123;56&#125; 8&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 6 \\\\ 1 &#38; 6&#125;&#125;&#123;1&#125; &#61; \\cancel&#123;0&#125; \\cancel&#123;4&#125; 1&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 8 \\\\ 1 &#38; 8&#125;&#125;&#123;1&#125; &#61; \\cancel&#123;0&#125; \\cancel&#123;12&#125; 3&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 6 \\\\ 1 &#38; 3&#125;&#125;&#123;1&#125; &#61; 3&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 8 \\\\ 1 &#38; 0&#125;&#125;&#123;1&#125; &#61; 8&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 3 \\\\ 3 &#38; 8&#125;&#125;&#123;3&#125; &#61; \\frac&#123;1&#125;&#123;3&#125;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 3 &#38; 8 \\\\ \\frac&#123;1&#125;&#123;3&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;1&#125;&#123;3&#125;&#125; &#61; 8&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#44 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;5&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;4&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nSince we have a row of zeros, we split our analysis into two cases. The remainder polynomial, which is rows $s^5$ to $s^4$ and has no sign change, and the divisor polynomial, which is rows $s^4$ to $s^0$ and has no sign changes either. So, we have\n\n| Polynomial | degree | no. of sign changes | ORHP | OLHP | $j Ï‰$-axis |\n|:----------:|:------:|:-------------------:|:----:|:----:|:-----------|\n| Remainder  | 1 | 0 | 0 | 1 | 0 | \n| Divisor    | 4 | 0 | 0 | 0 | 4 |\n| $D(s)$     | 5 |   | 0 | 1 | 4 |\n\n: {.striped}\n\nWe can verify this by factorizing $D(s)$, which gives (there are four roots on the $j Ï‰$ axis but we get small error in the location of the roots due to numerical accuracy)\n\n::: {#46 .cell execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 56 + 8*s + 42*s^2 + 6*s^3 + 7*s^4 + s^5\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n5-element Vector{ComplexF64}:\n     -7.000000000000012 + 0.0im\n  6.938893903907228e-17 - 1.414213562373094im\n  6.938893903907228e-17 + 1.414213562373094im\n 3.0531133177191805e-16 - 1.9999999999999993im\n 3.0531133177191805e-16 + 1.9999999999999993im\n```\n:::\n:::\n\n\n\n:::{#exm-Routh-Hurwitz-row-zero-1}\nConsider \n$$\nD(s) = (s^2 + 2)(s+1) = s^3 + s^2 + 2s + 2.\n$$\nUse Routh Hurwitz to find the location of the roots.\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nWe write the Routh Array\n\n::: {#48 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;2&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;2&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 2 \\\\ 1 &#38; 2&#125;&#125;&#123;1&#125; &#61; \\cancel&#123;0&#125; 2&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 2 \\\\ 2 &#38; 0&#125;&#125;&#123;2&#125; &#61; 2&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the signs of the terms in the first column:\n\n::: {#50 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1 html-table-processing=none}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\n\nSince we have a row of zeros, we split our analysis into two cases. The remainder polynomial, which is rows $s^3$ to $s^2$ and has no sign change, and the divisor polynomial, which is rows $s^2$ to $s^0$ and has no sign changes either. So, we have\n\n| Polynomial | degree | no. of sign changes | ORHP | OLHP | $j Ï‰$-axis |\n|:----------:|:------:|:-------------------:|:----:|:----:|:-----------|\n| Remainder  | 1 | 0 | 0 | 1 | 0 | \n| Divisor    | 2 | 0 | 0 | 0 | 2 |\n| $D(s)$     | 3 |   | 0 | 1 | 2 |\n\n: {.striped}\n\n:::\n\n:::{.callout-tip}\n## Summary of the Routh-Hurwitz criterion\n\n1. Check with $s^p$ (for some $p \\ge 1$) is a root of $D(s)$. If so, use Routh-Hurwitz on the polynomial $D(s)/s^p$\n\n2. Construct the Routh array.\n\n3. **Normal case.** There is no zero in the first column of the Routh array. Then,\n   \n   - No. of poles in ORHP = no. of sign changes\n   - No. of poles in OLHP = degree - (no. of sign changes)\n   - No. of poles on the $j Ï‰$-axis = 0.\n\n4. **Zero in the first column** (but the whole row is not zero).\n\n   - Since $s$ does not divide $D(s)$, row $s^0$ cannot be all zero.\n   - If row $s^1$ is all zeros, we treat it as a row of all zeros and not as a row with $\\epsilon$ in the first column.\n\n   In other cases, replace $0$ with $Îµ$ and continue filling the Routh array as usual. Count the number of sign changes as $Îµ \\to 0^{+}$. Then,\n   \n   - No. of poles in ORHP = no. of sign changes\n   - No. of poles in OLHP = degree - (no. of sign changes)\n   - No. of poles on the $j Ï‰$-axis = 0.\n\n5. **Whole row of zero.** Since $s$ does not divide $D(s)$, we get a row of zeros only at some odd row $s^{2k-1}$. This means that the polynomial $P_{2k}$ corresponding to the parent row $s^{2k}$ divides $D(s)$. We will use $R(s)$ to denote the remainder polynomial.\n\n   Replace row $P_{2k-1}(s)$ by $P'_{2k}(s)$ and continue filling the Routh array as usual. \n\n   - Treat the part upto row $s^{2k}$ as usual. That is we count the number of sign changes and the number of sign changes in the colum from row $s^n$ to $s^{2k}$ correspond to the number of roots of $R(s)$ to be in the ORHP.\n\n   - The part from row $s^{2k-1}$ to $s^0$ is treated differently. The number of roots in the ORHP is still equal to the number of sign changes. However, the number of roots in OLHP is equal to the number of roots in ORHP. The remaining roots ($n - 2k$) lie on the $j Ï‰$-axis.\n\n:::\n\n## Stability in state space\n\nSo far, we have examined stability of the TF. But we can use Routh-Hurwitz method to determine stability of state-space models as well. For example, consider a SSM\n$$\n  A = \\MATRIX{0 & 0 & 1 \\\\ 1 & 0 & 1 \\\\ -10 & -5 & -2}, \n  \\quad\n  B = \\MATRIX{10 \\\\ 0 \\\\ 0},\n  \\quad\n  C = \\MATRIX{1 & 0 & 0}.\n$$\nThe denominator of the TF $C(sI - A)^{-1}B$ is the characteristic polynomial of $A$ given by\n\\begin{align*}\n\\det(sI - A) &= \\DET{s & 0 & -1 \\\\ -1 & s & -1 \\\\ 10 & 5 & s + 2}\n\\\\\n&= s \\DET{s & -1 \\\\ 5 & s + 2} -1 \\DET{-1 & -1 \\\\ s & 5} \n\\\\\n&= s^3 + 2 s^2 + 15s + 5\n\\end{align*}\n\nWe can determine if the SSM is stable by checking the stability of the characteristic polynomial of $A$. In this instance, we have\n\n::: {#52 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;15&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;2&#36;</td><td>&#36;5&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 15 \\\\ 2 &#38; 5&#125;&#125;&#123;2&#125; &#61; \\frac&#123;25&#125;&#123;2&#125;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 2 &#38; 5 \\\\ \\frac&#123;25&#125;&#123;2&#125; &#38; 0&#125;&#125;&#123;\\frac&#123;25&#125;&#123;2&#125;&#125; &#61; 5&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nWe now look at the sign of the terms in the first column:\n\n::: {#54 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table class=\"routhsigns\"><thead><td>Term</td><td>Sign</td></thead><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;&#43;&#36;</td></tr></table>\n```\n:::\n:::\n\n\nSince there are no sign changes, the system is stable!\n\n## Stable design via Routh-Hurwitz\n\nThe Routh-Hurwitz criterion can be used to identify values of controller parameters for which a closed loop system is stable. We illustrate this via some examples.\n\n:::{#exm-stability-1}\nConsider the system shown below:\n\n![A proportional controller](figures/svg/routh-hurwitz2.svg)\n\nFind the value of $K$ for which the system is stable.\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nThe closed loop transfer function is given by\n$$\nT(s) = \\frac{K G(s)}{1 + K G(s)}\n= \\frac{K(s+1)}{s^3 + 5s^2 + (K-6)s + K\n$$\n\nTherefore, the Routh array is given by\n\n::: {#56 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;-6 &#43; K&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;5&#36;</td><td>&#36;K&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; -6 &#43; K \\\\ 5 &#38; K&#125;&#125;&#123;5&#125; &#61; -6 &#43; \\frac&#123;4&#125;&#123;5&#125; K&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 5 &#38; K \\\\ -6 &#43; \\frac&#123;4&#125;&#123;5&#125; K &#38; 0&#125;&#125;&#123;-6 &#43; \\frac&#123;4&#125;&#123;5&#125; K&#125; &#61; K&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nFor stability, all terms in the first column must be positive. Thus, we have\n$$\n\\dfrac{4K}{5} - 6 > 0\n\\quad\\text{and}\\quad\nK > 0\n$$\nwhich is equivalent to\n$$ K > 7.5 $$\n\n:::\n\n:::{#exm-stability-2}\nConsider the system shown below:\n\n![A proportional-integral (PI) controller](figures/svg/routh-hurwitz3.svg)\n\nFind the values of $A$ and $B$ for which the system is stable.\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nThe closed loop transfer function is given by\n$$\nT(s) = \\frac{\\left(A + \\dfrac{B}{s}\\right) G(s)}{1 + \\left(A + \\dfrac{B}{s}\\right)G(s)}\n= \\frac{As + B}{s^3 + 3s^2 + (A + 2)s + B}.\n$$\n\nTherefore, the Routh array is given by\n\n::: {#58 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;2 &#43; A&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;3&#36;</td><td>&#36;B&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 2 &#43; A \\\\ 3 &#38; B&#125;&#125;&#123;3&#125; &#61; 2 &#43; A - \\frac&#123;1&#125;&#123;3&#125; B&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 3 &#38; B \\\\ 2 &#43; A - \\frac&#123;1&#125;&#123;3&#125; B &#38; 0&#125;&#125;&#123;2 &#43; A - \\frac&#123;1&#125;&#123;3&#125; B&#125; &#61; B&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nFor stability, all terms in the first column must be positive. Thus, we have\n$$\n2 + A - \\frac{1}{3}B > 0\n\\quad\\text{and}\\quad\nB > 0.\n$$\n\n:::\n\n:::{#exm-stability-3}\nConsider the system shown below:\n\n![Another proportional controller](figures/svg/routh-hurwitz4.svg)\n\nFind the value of $K$ for which the system is stable.\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nThe closed loop transfer function is given by\n$$\nT(s) = \\frac{K G(s)}{1 + K G(s)}\n= \\frac{6K}{s^3 + 6s^2 + 11s + 6(1+K)}\n$$\n\nTherefore, the Routh array is given by\n\n::: {#60 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table class=\"routharray\"><tr><td>&#36;s^&#123;3&#125;&#36;</td><td>&#36;1&#36;</td><td>&#36;11&#36;</td></tr><tr><td>&#36;s^&#123;2&#125;&#36;</td><td>&#36;6&#36;</td><td>&#36;6 &#43; 6 K&#36;</td></tr><tr><td>&#36;s^&#123;1&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 1 &#38; 11 \\\\ 6 &#38; 6 &#43; 6 K&#125;&#125;&#123;6&#125; &#61; 10 - K&#36;</td></tr><tr><td>&#36;s^&#123;0&#125;&#36;</td><td>&#36;\\displaystyle -\\frac&#123;\\DET&#123; 6 &#38; 6 &#43; 6 K \\\\ 10 - K &#38; 0&#125;&#125;&#123;10 - K&#125; &#61; 6 &#43; 6 K&#36;</td></tr></table>\n```\n:::\n:::\n\n\n\nFor stability, all terms in the first column must be positive. Thus, we have\n$$\n10 - K > 0\n\\quad\\text{and}\\quad\n6(1+K) > 0\n$$\nwhich is equivalent to\n$$ -1 < K < 10 $$\n:::\n\n",
    "supporting": [
      "routh-hurwitz_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}